context:
  version: 0.30.2.dev3

package:
  name: themachinethatgoesping
  version: ${{ version }}

source:
  #path: ../
  git: https://github.com/themachinethatgoesping/themachinethatgoesping.git

build:
  script: 
    - if: unix
      then:
      - export CPPFLAGS="-I$PREFIX/include $CPPFLAGS"  # [unix]
      - export LDFLAGS="-L$PREFIX/lib $LDFLAGS"        # [unix]
      - export PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"  # [unix]
      - export BOOST_ROOT="$PREFIX"                    # [unix]
    - if: win
      then:
      - set CC=clang-cl
      - set CXX=clang-cl
      - set CXXFLAGS=/openmp
      - set CXXFLAGS=%CXXFLAGS% /EHsc                  # [win] - Append to existing CXXFLAGS
      #- set LDFLAGS=libomp.lib
      - set BOOST_ROOT=%PREFIX%\Library                        # [win]
      - set PATH=%PREFIX%\Library\bin;%PATH%           # [win]
      - set INCLUDE=%PREFIX%\Library\include;%INCLUDE% # [win]
      - set LIB=%PREFIX%\Library\lib;%LIB%             # [win]
      - curl -L https://raw.githubusercontent.com/themachinethatgoesping/tools/main/ninja-windows/ninja.exe -o ninja.exe  # [win]
      - set NINJA=%CD%\ninja.exe                       # [win]
    - if: osx
      then:
      - export MACOSX_DEPLOYMENT_TARGET=14.0           # [osx]
      - export CXXFLAGS="-stdlib=libc++ $CXXFLAGS"     # [osx]
      - export LDFLAGS="-undefined dynamic_lookup -Wl,-no_fixup_chains -Wl,-dead_strip"
      - export CXXFLAGS="${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY"  # [osx]
    - ${{ PYTHON }} -m pip install . -v --config-settings=setup-args="-Ddynamic_boost=enabled"
  number: 0
  # environment:
  #   - CPPFLAGS=-I$PREFIX/include          # [unix]
  #   - LDFLAGS=-L$PREFIX/lib               # [unix]
  #   - PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig  # [unix]
  #   - BOOST_ROOT=$PREFIX

requirements:
  build:
    - meson>=1.8.1
    - ninja
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - cmake
    - pkgconfig
    - boost-cpp >=1.84.0,<1.88.0
    - if: win
      then:
      - clang             # [win]
      - lld               # [win]
    - if: osx
      then:
      - clang_osx-arm64 =20    # [osx]
      - clangxx_osx-arm64 =20  # [osx]
      - llvm-openmp            # [osx] - Keep for macOS as it's needed
  host:
    - python  
    - meson-python>=0.15.0,<0.20.0
    - pybind11>=2.13.2,<2.14.0
    - numpy>=2.0.0,<2.5
    - pip
    - boost-cpp >=1.84.0,<1.88.0
    - if: win
      then:
      - vs2022_win-64     # [win]
    - if: osx
      then:
      - libcxx =20        # [osx]
      - llvm-openmp       # [osx]

  run:
  - python  
  - numba
  - ${{ pin_compatible('boost-cpp') }}
  - ipywidgets
  - ipympl
  - matplotlib
  - pandas
  - rasterio
  - tqdm
  - scipy
  - pytimeparse2
  - numpy < 2.3
  - if: osx
    then:
    - llvm-openmp       # [osx] - Keep for macOS

tests:
- python:
    imports:
    - themachinethatgoesping
    pip_check: true


about:
  #home: https://github.com/themachinethatgoesping
  summary: Enable advanced processing for multibeam and singlebeam echosounder data. THIS PROJECT IS IN DEVELOPMENT.
  license: MPL-2.0
  license_file: LICENSE

# maintainers:
#   - Peter Urban