# SPDX-FileCopyrightText: 2022 - 2023 Peter Urban, Ghent University
#
# SPDX-License-Identifier: CC0-1.0

name: conda packages

on:
  push:
    branches: [ main ]
    
    paths:
     - "**conda.yml" #ignore for now (except if this file is change)

  #   paths-ignore:
  #     - '.github/workflows/python-package*'
  #     - '.github/workflows/ci*'
  # pull_request:
  #   branches: [ main ]
    
  #   paths-ignore:
  #     - '.github/workflows/python-package*'
  #     - '.github/workflows/ci*'

# env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  #BUILD_TYPE: Release
  
# make sure that multiple jobs don't run for the same action (new commits cancel old jobs when they are still running)
# Souce Ralf Gommers (commit to meson-python)
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_conda:
    name: conda package ${{matrix.os}} ${{matrix.container}} 
    strategy:
      fail-fast: false
      matrix:
        include:  
          - { os : ubuntu-latest,
              dep: 'DEBIAN_FRONTEND=noninteractive sudo apt-get install -y libboost-all-dev',
              #CC : gcc,
              shell : 'bash -l {0}'}
          - { os: windows-latest,
              #CC : msvc14-3,
              boostversion: '1.79.0',
              boostversion_: '1_79_0',
              boostmodules: '--with-iostreams',
              shell : powershell}
          - { os: macos-latest,
              dep: brew install libomp boost,
              #CC : clang,
              shell: 'bash -l {0}'}
          
    container: ${{matrix.container}}

    runs-on: ${{matrix.os}}    
    env:
      CC: ${{matrix.CC}} 
    
    defaults:
      run:
        shell: ${{matrix.shell}}  

    steps:
    - name: install build dependencies (prebuild)
      if:  ${{matrix.predep}}
      run: ${{matrix.predep}}

    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        lfs: false
    
    - name: Install Conda environment from environment.yml
      if: ${{matrix.container}} != mambaorg/micromamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        cache-env: true

    # - uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     miniconda-version: "latest"
    #     python-version: 3.9
    #     activate-environment: buildenv
    #     channels: defaults, conda-forge
    # - name: install conda dependencies
    #   run: conda install -y conda-build anaconda-client
  
    - name: install build dependencies (c++)
      if:  ${{matrix.dep}}
      run: ${{matrix.dep}}

    # make sure meson can find msvc
    - name: Prepare MSVC
      if: runner.os == 'Windows'
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64

    - name: Cache Boost
      if: runner.os == 'Windows'
      id: cache-boost
      uses: actions/cache@v3
      with:
        path: c:\Boost
        key: windows-msvc-14.32-boost-${{matrix.boostversion}}-${{matrix.boostmodules}}
  
    - name: Install dependencies on windows
      if: (runner.os == 'Windows') && (steps.cache-boost.outputs.cache-hit != 'true')
      run: |
        Invoke-WebRequest -Uri https://boostorg.jfrog.io/artifactory/main/release/${{matrix.boostversion}}/source/boost_${{matrix.boostversion_}}.7z -outfile boost.7z
        7z x boost.7z 
        cd .\boost_${{matrix.boostversion_}}\
        .\bootstrap.bat
        .\b2.exe install --variant=release --threading=multi --link=static ${{matrix.boost-modules}}
        cd ..
        #rm -rv boost*

    - name: Build and test conda packages 
      #run: conda mambabuild conda.recipe/ --user themachinethatgoesping --token ${{ secrets.ANACONDA_API_TOKEN }}
      run: conda mambabuild conda.recipe/ --user themachinethatgoesping --token ${{ secrets.ANACONDA_API_TOKEN }}
      
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: ${{matrix.container}}_testlog
        path: builddir/meson-logs/testlog.txt
    


  # macos:
  #   name: ci on macOS
  #   runs-on: macos-latest
    
  #   env:
  #     CC: clang
      
  #   steps:
    
  #   - uses: actions/setup-python@v3
  #     with:
  #       python-version: '3.10'
        
  #   - name: checkout main repository
  #     uses: actions/checkout@v3
  #     with:
  #       submodules: recursive
  #       lfs: false
        
  #   - run: brew install libomp boost
    
  #   - run: pip install meson ninja pytest numpy
    
  #   - name: configure meson
  #     run: meson setup builddir/; meson configure builddir -Dpython.install_env=auto

  #   - name: compile project
  #     run: meson compile -C builddir/

  #   - name: test (cpp)
  #     run: meson test -C builddir/

  #   - name: install project
  #     run: meson install -C builddir/

  #   - name: test (pytest)
  #     run: pytest -v
      
  #   - uses: actions/upload-artifact@v1
  #     if: failure()
  #     with:
  #       name: ${{matrix.container}}_testlog
  #       path: builddir/meson-logs/testlog.txt

      
