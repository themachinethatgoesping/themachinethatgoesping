# SPDX-FileCopyrightText: 2022 - 2023 Peter Urban, Ghent University
#
# SPDX-License-Identifier: CC0-1.0

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions

name: cibuildwheels

on:
  push:
    branches: [ main ]    

    paths:
      - "**cibuildwheels.yml" #ignore for now (except if this file is change)

  #   paths-ignore:
  #     - '.github/workflows/ci-linux.yml'
  #     - '.github/workflows/ci-mac.yml'
  #     - '.github/workflows/ci-windows.yml'
  #     - '.github/workflows/python-package-windows*'
  #     - '.github/workflows/python-package-mac*'
  #     - '.github/workflows/python-package-linux*'
  #     - '.github/workflows/rattler*'
  #     - '.github/workflows/test_*'
  #     - 'conda.recipe/*'
  #     - '*.md'
  #     - 'doc/*'
  # pull_request:
  #   branches: [ main ]
  #   paths-ignore:
  #     - '.github/workflows/ci-linux.yml'
  #     - '.github/workflows/ci-mac.yml'
  #     - '.github/workflows/ci-windows.yml'
  #     - '.github/workflows/python-package-windows*'
  #     - '.github/workflows/python-package-mac*'
  #     - '.github/workflows/python-package-linux*'
  #     - '.github/workflows/rattler*'
  #     - '.github/workflows/test_*'
  #     - 'conda.recipe/*'
  #     - '*.md'
  #     - 'doc/*'


# make sure that multiple jobs don't run for the same action (new commits cancel old jobs when they are still running)
# Souce Ralf Gommers (commit to meson-python)
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  cibuildwheel:
    name: ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, macos-latest]#, windows-2025, macos-10.15]
        include:
          - { os: ubuntu-latest, arch: auto64 }
          #these run very slow at the moment maybe activate for releases
          #- { os: ubuntu-latest, arch: x86_64 }
          #- { os: ubuntu-latest, arch: aarch64 }
          #- { os: ubuntu-latest, arch: ppc64le }
          #- { os: ubuntu-latest, arch: s390x }

          #- { os: macos-latest,  arch: auto64 }
          #- { os: macos-latest,  arch: universal2, cxx_compiler: ["$(brew --prefix llvm@18)/bin/clang++"]  }
          - { os: macos-latest,  
              arch: x86_64, 
              cxx_compiler: "arch -x86_64 /usr/local/opt/llvm/bin/clang++",
              before_all: eval "$(/usr/local/bin/brew shellenv)"; arch -x86_64 brew install boost libomp llvm@18 python@3.10 python@3.11 python@3.12; arch -x86_64 brew link --overwrite python@3.10 python@3.11 python@3.12
              }
          - { os: macos-latest,  
              arch: arm64, 
              cxx_compiler: "$(brew --prefix llvm@18)/bin/clang++" , 
              boost_root: "BOOST_ROOT=/opt/homebrew/Cellar/boost/1.85.0",
              before_all: brew install boost libomp llvm@18}
          

    steps:

      - name: checkout main repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: false
      
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: tmtgp-cibuildwheels-${{ matrix.arch }}  # name for the cache

      #- uses: actions/setup-python@v2
        #if: runner.os == 'Linux'
        #name: Install Python
        #with:
          #python-version: '3.11'

      # if runner.os 
      # - name: print llvm path
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #       brew install llvm@18
      #       echo "$(brew --prefix llvm@18)/bin/clang++"

      - name: install macos - x86_64
        if: matrix.os == 'macos-latest' && matrix.arch == 'x86_64'
        run: |
            /usr/sbin/softwareupdate --install-rosetta --agree-to-license;
            arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)";
            (echo; echo 'eval "$(/usr/local/bin/brew shellenv)"') >> /Users/runner/.bash_profile
            

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.1
        env:
          # configure cibuildwheel to build different archs
          MACOSX_DEPLOYMENT_TARGET: "14"
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_MACOS: CXX=${{ matrix.cxx_compiler }} ${{ matrix.boost_root}}
          CIBW_BEFORE_ALL_MACOS: ${{ matrix.before_all}}

      - uses: actions/upload-artifact@v4
        with:
          name: python-${{ matrix.os }}-${{ matrix.arch }}-package-cibuildwheel
          path: ./wheelhouse/*.whl


  publish_wheels:
    needs: cibuildwheel
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, macos-latest]#, windows-2025, macos-10.15]
        include:
          - { os: ubuntu-latest, arch: auto64 }
          - { os: macos-latest, arch: x86_64 }
          - { os: macos-latest, arch: arm64}
    steps:

    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-${{ matrix.os }}-${{ matrix.arch }}-package-cibuildwheel
        path: dist/

    - name: Publish package
      # Note 1: In the future the skip existing option should be removed and replaced with the only publish on tags option (if)
      # Note 2: Packages will only be updated when the meson.build version number is changed! (existing will be skipped not updated)
      # Note 3: In the future this should better build against test.pypi repository!
      #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ./dist/
  
