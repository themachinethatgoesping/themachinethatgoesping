# SPDX-FileCopyrightText: 2022 - 2023 Peter Urban, Ghent University
#
# SPDX-License-Identifier: CC0-1.0

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions

name: Build Python Package Linux

on:
  push:
    branches: [ main ]    
    paths-ignore:
      - '.github/workflows/ci*'
      - '.github/workflows/python-package-windows*'
      - '.github/workflows/python-package-mac*'
      - '.github/workflows/cibuildwheels*'
      - '.github/workflows/rattler*'
      - '.github/workflows/test_*'
      - 'conda.recipe/*'
      - '*.md'
      - 'doc/*'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/ci*'
      - '.github/workflows/python-package-windows*'
      - '.github/workflows/python-package-mac*'
      - '.github/workflows/cibuildwheels*'
      - '.github/workflows/rattler*'
      - '.github/workflows/test_*'
      - 'conda.recipe/*'
      - '*.md'
      - 'doc/*'


# make sure that multiple jobs don't run for the same action (new commits cancel old jobs when they are still running)
# Souce Ralf Gommers (commit to meson-python)
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheel:

    name: Build linux wheel for python${{ matrix.python-version }}
    runs-on: ubuntu-latest
    container: ghcr.io/themachinethatgoesping/manylinux_x86_64-dep
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: '3.11', 
              pip-path: '/opt/python/cp311-cp311/bin'}
          - { python-version: '3.12', 
              pip-path: '/opt/python/cp312-cp312/bin'}
          - { python-version: '3.13', 
              pip-path: '/opt/python/cp313-cp313/bin'}
              #pip-pre: '--pre'}
  
    steps:
    - name: append github path
      run: echo ${{ matrix.pip-path }} >> $GITHUB_PATH
    
    - name: checkout main repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: false

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: tmtgp-pypi-linux-${{ matrix.python-version }}  # name for the cache
    
    - name: Install dependencies (pip)
      run: |
        python${{ matrix.python-version }} -m pip install --upgrade pip
        python${{ matrix.python-version }} -m pip install meson meson-python ninja pytest twine auditwheel pyproject-metadata
        pip install -r requirements.txt ${{ matrix.pip-pre }}
        
         
    - name: Build and install wheel
      run: |
        # enable gcc-12
        scl enable gcc-toolset-12 bash
        # build wheel
        python${{ matrix.python-version }} -m build -w -Cbuilddir=pybuild
        # repair with auditwheel
        auditwheel repair ./dist/*
        # install wheel
        python${{ matrix.python-version }} -m pip install ./wheelhouse/*
        
    - name: Test with meson (c++)
      run: |
        meson test -C pybuild --print-errorlogs

    - name: Test with pytest
      run: |
        pytest

    - name: Store the binary wheel
      uses: actions/upload-artifact@v4
      with:
        name: python-${{ matrix.python-version }}-package-linux
        path: wheelhouse
        
  install_test_and_publish:
    name: Test,install and publish linux wheel for python 3.${{ matrix.python-3-version }}
    needs: build_wheel
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-3-version: ['11','12','13']

        # include:
        #   - python-version: '3.12'
        #     pip-pre: '--pre'
    steps:

    - uses: actions/setup-python@v3
      with:
        python-version: 3.${{matrix.python-3-version}}

    #necessary only for pytest
    - name: checkout main repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: false

    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-3.${{ matrix.python-3-version }}-package-linux
        path: dist/

    - name: install pip dependencies
      # missing typing_extensions caused an error with pypi-publish ...
      run: pip install pytest typing_extensions 

    - name: install wheels
      run: |
        pip install $(ls dist/*-cp3${{matrix.python-3-version}}-*.whl) ${{matrix.pip-pre}}

    - name: test (pytest)
      run: pytest

    - name: Publish package
      # Note 1: In the future the skip existing option should be removed and replaced with the only publish on tags option (if)
      # Note 2: Packages will only be updated when the meson.build version number is changed! (existing will be skipped not updated)
      # Note 3: In the future this should better build against test.pypi repository!
      #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ./dist/
  
  # delay for one minute before attempting to download the packages from pypi
  delay_after_publish:
    needs: install_test_and_publish
    runs-on: ubuntu-latest
    steps:
    - name: Sleep for 10s
      run: sleep 10s
      shell: bash

  test_pypi:
    needs: delay_after_publish
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11','3.12','3.13']

        # include:
        #   - python-version: '3.12'
        #     pip-pre: '--pre'

    steps:
    - name: checkout main repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: false

    - uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python-version}}

    - name: install via pip
      run: pip install themachinethatgoesping pytest ${{matrix.pip-pre}}

    - name: pytest from git repo
      run: pytest -v
      
  
