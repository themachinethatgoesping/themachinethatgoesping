# SPDX-FileCopyrightText: 2022 Peter Urban, Ghent University
#
# SPDX-License-Identifier: CC0-1.0

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions

name: Build Python Package Linux

on:
  push:
    branches: [ main ]    
    paths-ignore:
      - '.github/workflows/ci*'
      - '.github/workflows/python-package-windows*'
      - '.github/workflows/python-package-mac*'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/ci*'
      - '.github/workflows/python-package-windows*'
      - '.github/workflows/python-package-mac*'

jobs:
  build_wheel:

    runs-on: ubuntu-latest
    container: ghcr.io/themachinethatgoesping/manylinux_x86_64-dep
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: '3.8', 
              pip-path: '/opt/_internal/cpython-3.8.13/bin'}
          - { python-version: '3.9', 
              pip-path: '/opt/_internal/cpython-3.9.13/bin'}
          - { python-version: '3.10', 
              pip-path: '/opt/_internal/cpython-3.10.4/bin'}
          #- { python-version: '3.11', 
          #    pip-path: '/opt/_internal/cpython-3.11.0b1/bin'}
    #env:
    #  PATH: "/opt/_internal/cpython-3.10.4/bin:$PATH"
  
    steps:
    - name: append github path
      run: echo ${{ matrix.pip-path }} >> $GITHUB_PATH
    
    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Install dependencies (pip)
      run: |
        python${{ matrix.python-version }} -m pip install --upgrade pi
        python${{ matrix.python-version }} -m pip install meson ninja pytest twine auditwheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
         
    - name: Build and install wheel
      run: |
        # build wheel
        python${{ matrix.python-version }} -m build -w -Cbuilddir=pybuild
        # repair with auditwheel
        auditwheel repair ./dist/*
        # install wheel
        python${{ matrix.python-version }} -m pip install ./wheelhouse/*
        
    - name: Test with meson (c++)
      run: |
        meson test -C pybuild

    - name: Test with pytest
      run: |
        pytest

    - name: Store the binary wheel
      uses: actions/upload-artifact@v3
      with:
        name: python-package-linux
        path: wheelhouse
        
 install_test_and_publish:
    needs: build_wheel
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-3-version: ['8','9','10']

    steps:

    - uses: actions/setup-python@v3
      with:
        python-version: 3.${{matrix.python-3-version}}

    #necessary only for pytest
    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Download all the dists
      uses: actions/download-artifact@v2
      with:
        name: python-package-linux
        path: dist/

    - name: install pip dependencies
      run: pip install pytest

    - name: install wheels
      run: |
        pip install $(ls dist/*-cp3${{matrix.python-3-version}}-*.whl)

    - name: test (pytest)
      run: pytest

    - name: Publish package
      # Note 1: In the future the skip existing option should be removed and replaced with the only publish on tags option (if)
      # Note 2: Packages will only be updated when the meson.build version number is changed! (existing will be skipped not upated)
      # Note 3: In the future this should better build against test.pypi repository!
      #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ./dist/
  
