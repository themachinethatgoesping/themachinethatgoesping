# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build Python Package Windows

on:
  push:
    branches: [ main ]    
    paths-ignore:
      - '.github/workflows/ci*'
      - '.github/workflows/python-package-linux*'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/ci*'
      - '.github/workflows/python-package-linux*'

jobs:
  build_and_publish:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        boost-version: [1.79.0]
        boost-version_: [1_79_0]
        boost-modules: [--with-filesystem]
        compiler: [msvc-14.3]
        python-version: ['3.8','3.9','3.10']

    env:
      CC: ${{matrix.compiler}}

    steps:
    - uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python-version}}

    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Cache Boost
      id: cache-boost
      uses: actions/cache@v3
      with:
        path: c:\Boost
        key: windows-${{matrix.compiler}}-boost-${{matrix.boost-version}}-${{matrix.boost-modules}}

    - name: Install boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
          #vcpkg install boost
          #choco install boost-msvc-14.3
          Invoke-WebRequest -Uri https://boostorg.jfrog.io/artifactory/main/release/${{matrix.boost-version}}/source/boost_${{matrix.boost-version_}}.7z -outfile boost.7z
          7z x boost.7z
          cd .\boost_${{matrix.boost-version_}}\
          .\bootstrap.bat
          .\b2.exe install --variant=release --threading=multi --link=static ${{matrix.boost-modules}}
          cd ..
          #rm -rv boost*


    #same as on linux
    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Install dependencies (pip)
      run: |
        #pip install --upgrade pip
        pip install meson ninja pytest twine wheel
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
         
    - name: build and install wheel
      run: |
        # build wheel
        pip wheel -w dist . --config-settings="builddir=pybuild" --no-build-isolation -v
        # install wheel
        pip install . --config-settings="builddir=pybuild" --no-build-isolation -v
        
    - name: Test with meson (c++)
      run: |
        meson test -C pybuild
        
    - name: Test with pytest
      run: |
        pytest
        
    - name: Publish package
      # Note 1: In the future the skip existing option should be removed and replaced with the only publish on tags option (if)
      # Note 2: Packages will only be updated when the meson.build version number is changed! (existing will be skipped not upated)
      # Note 3: In the future this should better build against test.pypi repository!
      #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: .\dist\
        
        
  #install_and_test:
    #needs: build_and_publish
      
    #strategy:
      #matrix:
        #include:
          #- { container: 'ghcr.io/themachinethatgoesping/ubuntu-dep:latest'}
          #- { container: 'ubuntu:22.04',
              #pre-dep : 'apt update && apt-get install -y sudo git',
              #dep : 'sudo DEBIAN_FRONTEND=noninteractive apt-get install -y python3-pip'}
          #- { container: 'ubuntu:20.04',
              #pre-dep : 'apt update && apt-get install -y sudo git',
              #dep : 'sudo DEBIAN_FRONTEND=noninteractive apt-get install -y python3-pip'}
          #- { container: 'archlinux',
              #pre-dep : 'pacman -Syu --noconfirm; pacman -Syy sudo git --noconfirm',
              #dep : 'sudo pacman -Syy --noconfirm base-devel python-pip'}

    #runs-on: ubuntu-latest
    #container: ${{matrix.container}}

    #steps:
    #- name: install prequisits
      #if:  ${{matrix.pre-dep}}
      #run: ${{matrix.pre-dep}}

    #- name: checkout main repository
      #uses: actions/checkout@v3
      #with:
        #submodules: recursive

    #- name: install dependecies (python and pip)
      #if:  ${{matrix.dep}}
      #run: ${{matrix.dep}}

    #- name: install dependcies (pip)
      #run: pip install themachinethatgoesping pytest

    #- name: test (pytest)
      #run: pytest -v

    #- uses: actions/upload-artifact@v1
      #if: failure()
      #with:
        #name: ${{matrix.container}}_Testlog
        #path: builddir/meson-logs/testlog.txt

  
