from __future__ import annotations
from copy import deepcopy
import math as math
from math import asin
from math import cos
from math import degrees
from math import radians
from math import sin
from math import sqrt
from math import tan
from matplotlib import pyplot as plt
import numpy as np
from themachinethatgoesping.scripts.oceanographic import knots_to_ms
from themachinethatgoesping.scripts.plot_tools import prepare_plt
from themachinethatgoesping.scripts.sbes import SBES
import typing
__all__ = ['MBES', 'SBES', 'asin', 'cos', 'deepcopy', 'degrees', 'knots_to_ms', 'math', 'np', 'pi', 'plt', 'prepare_plt', 'radians', 'sin', 'sqrt', 'tan']
class MBES:
    __firstlineno__: typing.ClassVar[int] = 21
    __static_attributes__: typing.ClassVar[tuple] = ('beamopening_angle_across', 'beamopening_angle_along', 'draw_delta_angle', 'max_range_factor', 'sbes', 'seafloor_alpha', 'seafloor_beta', 'swathopening_angle', 'x', 'y', 'z')
    plt_aspect: typing.ClassVar[bool] = True
    plt_grid: typing.ClassVar[bool] = True
    plt_title: typing.ClassVar[str] = 'MBES overlap'
    plt_xlabel: typing.ClassVar[str] = 'Alongtrack (m)'
    plt_ylabel: typing.ClassVar[str] = 'Depth (m)'
    @staticmethod
    def calc_along_pingdistance(speed, pingrate):
        ...
    @staticmethod
    def show():
        ...
    def __init__(self, swathopening_angle, beamopening_angle_along, beamopening_angle_across, seafloor_alpha = 0, seafloor_beta = 0, max_range_factor = 2, x = 0, y = 0, z = 0):
        ...
    def calc_along_overlap_depth(self, delta_x):
        ...
    def calc_along_overlap_depth_for_pingrate(self, speed, pingrate):
        ...
    def calc_along_overlap_pingrate(self, speed: float, depth: float) -> float:
        ...
    def calc_footprint_across(self, depth: float) -> float:
        ...
    def calc_footprint_along(self, depth: float) -> float:
        ...
    def calc_linespacing(self, depth, max_minslant_bottom_distance, min_minslant_visible_distance = None, max_flare_height = None):
        ...
    def calc_minsland_visible_height(self, depth, y_distance, max_bottom_distance = None):
        ...
    def calc_minslant_bottom_distance(self, depth, y_distance):
        ...
    def calc_swathwidth(self, depth: float) -> float:
        ...
    def get_horizontal_line(self, depth: float, extent = 0, ymin = None, ymax = None) -> tuple:
        ...
    def get_minslant_range(self, depth):
        ...
    def get_seafloor_depth(self, depth, y = None, x = None):
        ...
    def get_seafloor_y_distance(self, depth, beamangle):
        ...
    def get_sidelobe_circle(self, depth):
        ...
    def get_swath_limits(self, depth: float) -> tuple:
        ...
    def get_swath_ymax_z(self, depth: float) -> float:
        ...
    def get_swath_ymin_z(self, depth: float) -> float:
        ...
    def make_figure(self, title = None, xlabel = None, ylabel = None, aspect = None, grid = None):
        ...
    def plot(self, depth, color, add_bottom = True, axes = None, limit_plot = True):
        ...
    def plot_across_swathoverlap_at_linespacing(self, depth, linespacing, max_flare_height = None, color1 = 'orange', color2 = 'purple', print_vars = True, add_bottom = True, axes = None, make_figure = True, limit_plot = True):
        ...
    def plot_across_swathoverlap_at_max_bottom_distance(self, depth, max_minslant_bottom_distance, min_minslant_visible_height = None, max_flare_height = None, color1 = 'orange', color2 = 'purple', print_vars = True, add_bottom = True, axes = None, make_figure = True, limit_plot = True):
        ...
    def plot_along(self, depth, color, add_bottom, axes = None):
        ...
    def plot_along_pingoverlap_at_overlapdepth(self, depth, speed, overlapdepth, color1 = 'r', color2 = 'b', print_vars = True, add_bottom = True, axes = None):
        ...
    def plot_along_pingoverlap_at_pingrate(self, depth, speed, pingrate, color1 = 'r', color2 = 'b', print_vars = True, add_bottom = True, axes = None):
        ...
pi: float = 3.141592653589793
