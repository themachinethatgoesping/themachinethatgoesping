from __future__ import annotations
import datetime as dt
import numpy as np
from themachinethatgoesping.pingprocessing.core.asserts import assert_length
from themachinethatgoesping.pingprocessing.core.asserts import assert_valid_argument
from themachinethatgoesping.pingprocessing.core.progress import get_progress_iterator
from themachinethatgoesping import tools
import typing
__all__ = ['EchoLayer', 'PingData', 'assert_length', 'assert_valid_argument', 'dt', 'get_progress_iterator', 'np', 'tools']
class EchoLayer:
    __firstlineno__: typing.ClassVar[int] = 13
    __static_attributes__: typing.ClassVar[tuple] = ('echodata', 'i0', 'i1', 'vec_max_y', 'vec_min_y', 'y0', 'y1')
    @classmethod
    def from_ping_param_offsets_absolute(cls, echodata, ping_param_name, offset_0, offset_1):
        ...
    @classmethod
    def from_ping_param_offsets_relative(cls, echodata, ping_param_name, offset_0, offset_1):
        ...
    @classmethod
    def from_static_layer(cls, echodata, min_y, max_y):
        ...
    def __init__(self, echodata, vec_x_val, vec_min_y, vec_max_y):
        ...
    def combine(self, other):
        ...
    def get_y_indices_depth_stack(self, wci_nr):
        ...
    def get_y_indices_range_stack(self, wci_nr):
        ...
    def set_indices(self, i0, i1, vec_min_y, vec_max_y):
        ...
    def update_y_gridder(self):
        ...
class PingData:
    __firstlineno__: typing.ClassVar[int] = 143
    __static_attributes__: typing.ClassVar[tuple] = ('echodata', 'nr')
    def __init__(self, echodata, nr):
        ...
    def get_datetime(self):
        ...
    def get_extent_layers(self, axis_name = None):
        ...
    def get_limits_layers(self, axis_name = None):
        ...
    def get_ping_time(self):
        ...
    def get_wci(self):
        ...
    def get_wci_layers(self):
        ...
